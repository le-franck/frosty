{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/RepositoriesWrapper.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RepositoryLines from \"./RepositoryLines\";\nimport { COLORS_THEME, STORAGE_KEY } from \"../utils/constants\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { getRepos } from \"../logic/dataFetch\";\n\nvar RepositoriesWrapper = function RepositoriesWrapper(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      _starredRepositories = _useState2[0],\n      setStarredRepositories = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _initialRepositories = _useState4[0],\n      setInitialRepositories = _useState4[1];\n\n  console.log(\"æfjkohdsæalwi d\");\n  useEffect(function () {\n    console.log(\"hello??\");\n    readData();\n    initialDataFetch();\n  }, []);\n\n  var initialDataFetch = function initialDataFetch() {\n    getRepos(_initialRepositories, setInitialRepositories);\n    console.log(_initialRepositories.length);\n  };\n\n  var readData = function readData() {\n    var starredRepositories, starredRepositoriesParsed;\n    return _regeneratorRuntime.async(function readData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n          case 3:\n            starredRepositories = _context.sent;\n            starredRepositoriesParsed = [];\n            if (starredRepositories) starredRepositoriesParsed = JSON.parse(starredRepositories);\n            setStarredRepositories(starredRepositoriesParsed);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"error in the local storage\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.headerLeft,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(Image, {\n    source: require(\"../img/GitHub-Mark-Light-120px-plus.png\"),\n    style: styles.headerImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.headerRight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), _initialRepositories ? React.createElement(RepositoryLines, {\n    initialRepositories: _initialRepositories,\n    starredRepositories: _starredRepositories,\n    navigation: navigation,\n    route: route,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }) : React.createElement(ActivityIndicator, {\n    style: {\n      flexGrow: 1,\n      backgroundColor: COLORS_THEME.bg_secondary\n    },\n    size: \"large\",\n    color: COLORS_THEME.info,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: \"flex-start\"\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    justifyContent: \"space-between\",\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS_THEME.border_primary,\n    paddingTop: 8,\n    paddingBottom: 16,\n    backgroundColor: COLORS_THEME.bg_primary,\n    color: COLORS_THEME.info\n  },\n  headerLeft: {\n    flex: 1\n  },\n  headerRight: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"flex-end\"\n  },\n  headerButton: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginHorizontal: 8\n  },\n  headerImage: {\n    width: 32,\n    height: 32\n  },\n  headerText: {\n    color: COLORS_THEME.info,\n    fontSize: 18,\n    marginLeft: 8\n  }\n});\nexport default RepositoriesWrapper;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/RepositoriesWrapper.tsx"],"names":["React","useState","useEffect","RepositoryLines","COLORS_THEME","STORAGE_KEY","AsyncStorage","getRepos","RepositoriesWrapper","route","navigation","_starredRepositories","setStarredRepositories","_initialRepositories","setInitialRepositories","console","log","readData","initialDataFetch","length","getItem","starredRepositories","starredRepositoriesParsed","JSON","parse","error","styles","container","header","headerLeft","require","headerImage","headerRight","flexGrow","backgroundColor","bg_secondary","info","StyleSheet","create","display","flex","alignItems","justifyContent","flexDirection","alignSelf","borderBottomWidth","borderBottomColor","border_primary","paddingTop","paddingBottom","bg_primary","color","headerButton","marginHorizontal","width","height","headerText","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Image, View, Button, Text, ActivityIndicator } from 'react-native';\nimport RepositoryLines from './RepositoryLines';\nimport RepositoryView from './Repository';\nimport { COLORS_THEME, STORAGE_KEY } from '../utils/constants';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { getRepos } from '../logic/dataFetch';\nimport { RepositoryLightModel } from '../model/repository_light';\n\nconst RepositoriesWrapper = ({ route, navigation }: { route: any, navigation: any }) => {\n\n    const [_starredRepositories, setStarredRepositories] = useState<string[]>([]);\n    const [_initialRepositories, setInitialRepositories] = useState<RepositoryLightModel[]>([]);\n    console.log(\"æfjkohdsæalwi d\");\n\n    useEffect(() => {\n        console.log(\"hello??\");\n\n        readData();\n        initialDataFetch();\n    }, [])\n\n\n    const initialDataFetch = () => {\n        //Need to pre initialise the first in the parent to fetch to not have to render awaited data in the flat list \n        getRepos(_initialRepositories, setInitialRepositories);\n        console.log(_initialRepositories.length);\n\n    }\n\n    //had to move this here because Typescript does not let me cancel asynch function in a useEffect return () => false \n    const readData = async () => {\n        try {\n            const starredRepositories = await AsyncStorage.getItem(STORAGE_KEY);\n            let starredRepositoriesParsed = [];\n            if (starredRepositories)\n                starredRepositoriesParsed = JSON.parse(starredRepositories);\n            setStarredRepositories(starredRepositoriesParsed);\n\n        } catch (e) {\n            console.error(\"error in the local storage\")\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <View style={styles.headerLeft}>\n                </View>\n                <Image source={require('../img/GitHub-Mark-Light-120px-plus.png')} style={styles.headerImage} />\n                <View style={styles.headerRight}>\n                </View>\n            </View>\n            {_initialRepositories ?\n                <RepositoryLines initialRepositories={_initialRepositories} starredRepositories={_starredRepositories} navigation={navigation} route={route} /> :\n                <ActivityIndicator style={{ flexGrow: 1, backgroundColor: COLORS_THEME.bg_secondary }} size=\"large\" color={COLORS_THEME.info} />}\n        </View>);\n\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        alignItems: 'stretch',\n        justifyContent: \"flex-start\",\n    },\n    header: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"stretch\",\n        justifyContent: \"space-between\",\n        borderBottomWidth: 2,\n        borderBottomColor: COLORS_THEME.border_primary,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: COLORS_THEME.bg_primary,\n        color: COLORS_THEME.info,\n    },\n    headerLeft: {\n        flex: 1,\n    },\n    headerRight: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"flex-end\",\n    },\n    headerButton: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginHorizontal: 8\n    },\n    headerImage: {\n        width: 32,\n        height: 32,\n    },\n    headerText: {\n        color: COLORS_THEME.info,\n        fontSize: 18,\n        marginLeft: 8,\n    }\n});\n\nexport default RepositoriesWrapper;"]},"metadata":{},"sourceType":"module"}