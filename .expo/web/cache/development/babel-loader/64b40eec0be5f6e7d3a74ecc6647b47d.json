{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/Repository.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { COLORS_THEME } from \"../utils/constants\";\n\nvar RepositoryView = function RepositoryView(_ref) {\n  var owner = _ref.owner,\n      repo = _ref.repo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      _loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _repository = _useState4[0],\n      setRepository = _useState4[1];\n\n  useEffect(function () {\n    getRepos();\n  }, []);\n\n  var getRepos = function getRepos() {\n    setLoading(true);\n    fetch('https://api.github.com/repos/' + owner + '/' + repo, {\n      'headers': {\n        'Authorization': \"token 66ef3f80be2e4f109bfbb55831bb0e88006281b1\",\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      var id = responseJson.id,\n          name = responseJson.name,\n          description = responseJson.description,\n          stargazers_count = responseJson.stargazers_count,\n          _responseJson$owner = responseJson.owner,\n          avatar_url = _responseJson$owner.avatar_url,\n          login = _responseJson$owner.login,\n          html_url = responseJson.html_url,\n          language = responseJson.language;\n      var res = {\n        id: id,\n        name: name,\n        description: description,\n        stargazers_count: stargazers_count,\n        owner: {\n          avatar_url: avatar_url,\n          login: login\n        },\n        html_url: html_url,\n        language: language\n      };\n      setRepository(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    setLoading(false);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, _loading ? React.createElement(ActivityIndicator, {\n    style: {\n      flexGrow: 1\n    },\n    size: \"large\",\n    color: COLORS_THEME.info,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }) : React.createElement(Text, {\n    style: {\n      color: COLORS_THEME.info\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, _repository == null ? void 0 : _repository.owner.login, \" / \", _repository == null ? void 0 : _repository.name));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS_THEME.bg_secondary\n  },\n  item: {\n    paddingHorizontal: 24,\n    paddingVertical: 16,\n    borderBottomColor: COLORS_THEME.border_secondary,\n    borderBottomWidth: 1\n  }\n});\nexport default RepositoryView;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/Repository.tsx"],"names":["React","useState","useEffect","COLORS_THEME","RepositoryView","owner","repo","_loading","setLoading","_repository","setRepository","getRepos","fetch","then","response","json","responseJson","console","log","id","name","description","stargazers_count","avatar_url","login","html_url","language","res","catch","error","styles","container","flexGrow","info","color","StyleSheet","create","flex","backgroundColor","bg_secondary","item","paddingHorizontal","paddingVertical","borderBottomColor","border_secondary","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Text, ActivityIndicator, TouchableOpacity } from 'react-native';\nimport { RepositoryModel } from '../model/repository';\nimport { COLORS_THEME } from '../utils/constants';\n\nconst RepositoryView = ({ owner, repo }: { owner: string, repo: string }) => {\n    const [_loading, setLoading] = useState<boolean>(false);\n    const [_repository, setRepository] = useState<RepositoryModel>()\n    useEffect(() => { getRepos() }, [])\n\n    const getRepos = () => {\n        setLoading(true);\n\n        fetch('https://api.github.com/repos/' + owner + '/' + repo, {\n            'headers': {\n                'Authorization': \"token 66ef3f80be2e4f109bfbb55831bb0e88006281b1\",\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        })\n            .then(response => response.json())\n            .then((responseJson: RepositoryModel) => {\n                console.log(responseJson);\n\n                const {\n                    id,\n                    name,\n                    description,\n                    stargazers_count,\n                    owner: {\n                        avatar_url,\n                        login\n                    },\n                    html_url,\n                    language,\n                } = responseJson;\n                const res: RepositoryModel = {\n                    id,\n                    name,\n                    description,\n                    stargazers_count,\n                    owner: {\n                        avatar_url,\n                        login\n                    },\n                    html_url,\n                    language,\n                }\n                setRepository(res);\n            })\n\n            .catch(error => console.log(error));\n        setLoading(false);\n    }\n\n\n    return (\n        <View style={styles.container}>\n            {_loading ? <ActivityIndicator style={{ flexGrow: 1 }} size=\"large\" color={COLORS_THEME.info} /> :\n                <Text style={{ color: COLORS_THEME.info }}>{_repository?.owner.login} / {_repository?.name}</Text>}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: COLORS_THEME.bg_secondary,\n    },\n    item: {\n        paddingHorizontal: 24,\n        paddingVertical: 16,\n        borderBottomColor: COLORS_THEME.border_secondary,\n        borderBottomWidth: 1,\n    }\n});\n\n\nexport default RepositoryView;"]},"metadata":{},"sourceType":"module"}