{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/navigation/Tabbar.tsx\";\n\nimport * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Home from \"../views/Home\";\nimport RepositoryView from \"../views/Repository\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS_THEME } from \"../constants/colors\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nvar Tab = createBottomTabNavigator();\n\nvar Tabbar = function Tabbar() {\n  var MyTabBar = function MyTabBar(_ref) {\n    var state = _ref.state,\n        descriptors = _ref.descriptors,\n        navigation = _ref.navigation;\n\n    var icon = function icon(name) {\n      switch (name) {\n        case \"Home\":\n          return React.createElement(Icon, {\n            name: \"star-o\",\n            size: 16,\n            color: COLORS_THEME.info,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 28\n            }\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return React.createElement(View, {\n      style: styles.tabBarWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, state.routes.map(function (route, index) {\n      var options = descriptors[route.key].options;\n      var label = route.name;\n      var isFocused = state.index === index;\n\n      var onPress = function onPress() {\n        var event = navigation.emit({\n          type: 'tabPress',\n          target: route.key\n        });\n\n        if (!isFocused && !event.defaultPrevented) {\n          navigation.navigate(route.name);\n        }\n      };\n\n      var onLongPress = function onLongPress() {\n        navigation.emit({\n          type: 'tabLongPress',\n          target: route.key\n        });\n      };\n\n      return React.createElement(TouchableOpacity, {\n        accessibilityRole: \"button\",\n        accessibilityState: isFocused ? {\n          selected: true\n        } : {},\n        accessibilityLabel: options.tabBarAccessibilityLabel,\n        testID: options.tabBarTestID,\n        onPress: onPress,\n        onLongPress: onLongPress,\n        style: styles.textWrapper,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, {\n          color: isFocused ? COLORS_THEME.info : COLORS_THEME.border_tertiary\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, icon(route.name)));\n    }));\n  };\n\n  return React.createElement(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return React.createElement(MyTabBar, {\n        state: props.state,\n        descriptors: props.descriptors,\n        navigation: props.navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Repos\",\n    component: RepositoryView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Home3\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  tabBarWrapper: {\n    flexDirection: 'row',\n    backgroundColor: COLORS_THEME.bg_primary,\n    height: 48,\n    borderTopColor: COLORS_THEME.border_primary,\n    borderTopWidth: 1\n  },\n  textWrapper: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  text: {}\n});\nexport default Tabbar;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/navigation/Tabbar.tsx"],"names":["React","createBottomTabNavigator","Home","RepositoryView","COLORS_THEME","Icon","Tab","Tabbar","MyTabBar","state","descriptors","navigation","icon","name","info","styles","tabBarWrapper","routes","map","route","index","options","key","label","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","selected","tabBarAccessibilityLabel","tabBarTestID","textWrapper","text","color","border_tertiary","props","StyleSheet","create","flexDirection","backgroundColor","bg_primary","height","borderTopColor","border_primary","borderTopWidth","flex","display","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Home from \"../views/Home\";\nimport RepositoryView from '../views/Repository';\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { COLORS_THEME } from '../constants/colors';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst Tab = createBottomTabNavigator();\n\n\n\nconst Tabbar = () => {\n\n    const MyTabBar = ({ state, descriptors, navigation }: { state: any, descriptors: any, navigation: any }) => {\n\n        const icon = (name: string) => {\n            switch (name) {\n                case \"Home\":\n                    return <Icon name={\"star-o\"} size={16} color={COLORS_THEME.info} />\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <View style={styles.tabBarWrapper}>\n                {state.routes.map((route, index) => {\n                    const { options } = descriptors[route.key];\n                    const label = route.name;\n\n                    const isFocused = state.index === index;\n\n                    const onPress = () => {\n                        const event = navigation.emit({\n                            type: 'tabPress',\n                            target: route.key,\n                        });\n\n                        if (!isFocused && !event.defaultPrevented) {\n                            navigation.navigate(route.name);\n                        }\n                    };\n\n                    const onLongPress = () => {\n                        navigation.emit({\n                            type: 'tabLongPress',\n                            target: route.key,\n                        });\n                    };\n\n                    return (\n                        <TouchableOpacity\n                            accessibilityRole=\"button\"\n                            accessibilityState={isFocused ? { selected: true } : {}}\n                            accessibilityLabel={options.tabBarAccessibilityLabel}\n                            testID={options.tabBarTestID}\n                            onPress={onPress}\n                            onLongPress={onLongPress}\n                            style={styles.textWrapper}\n                            key={index}\n                        >\n                            <Text style={[styles.text, { color: isFocused ? COLORS_THEME.info : COLORS_THEME.border_tertiary }]}>\n                                {icon(route.name)}\n                            </Text>\n                        </TouchableOpacity>\n                    );\n                })}\n            </View>\n        );\n    }\n\n    return (\n        <Tab.Navigator tabBar={props => <MyTabBar state={props.state} descriptors={props.descriptors} navigation={props.navigation} />} >\n            <Tab.Screen name=\"Home\" component={Home} />\n            <Tab.Screen name=\"Repos\" component={RepositoryView} />\n            <Tab.Screen name=\"Home3\" component={Home} />\n        </Tab.Navigator>\n    );\n}\n\nconst styles = StyleSheet.create({\n    tabBarWrapper: {\n        flexDirection: 'row',\n        backgroundColor: COLORS_THEME.bg_primary,\n        height: 48,\n        borderTopColor: COLORS_THEME.border_primary,\n        borderTopWidth: 1,\n    },\n    textWrapper: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    text: {\n\n    }\n});\n\n\nexport default Tabbar;"]},"metadata":{},"sourceType":"module"}