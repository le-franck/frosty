{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/Repository.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RepositoryLines from \"./RepositoryLines\";\nimport { COLORS_THEME } from \"../constants/colors\";\nimport { createStackNavigator } from '@react-navigation/stack';\nvar STORAGE_KEY = '@starred_repositories';\nvar Stack = createStackNavigator();\n\nvar RepositoryView = function RepositoryView() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      _loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _repositories = _useState4[0],\n      setRepositories = _useState4[1];\n\n  useEffect(function () {\n    getRepos();\n  }, []);\n\n  var getRepos = function getRepos() {\n    setLoading(true);\n    var lastMonth = new Date(new Date().setMonth(new Date().getMonth() - 1)).toISOString().split('T')[0];\n    var page = Math.ceil(_repositories.length / 24) + 1;\n    fetch('https://api.github.com/search/repositories?q=created:>' + lastMonth + '&sort=stars&order=desc&per_page=24&page=' + page, {\n      'headers': {\n        'Authorization': \"token 66ef3f80be2e4f109bfbb55831bb0e88006281b1\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (responseJson.items) {\n        var res = responseJson.items.map(function (_ref) {\n          var id = _ref.id,\n              name = _ref.name,\n              description = _ref.description,\n              html_url = _ref.html_url,\n              language = _ref.language,\n              stargazers_count = _ref.stargazers_count,\n              open_issues = _ref.open_issues,\n              owner = _ref.owner;\n          return {\n            id: id,\n            name: name,\n            description: description,\n            html_url: html_url,\n            language: language,\n            stargazers_count: stargazers_count,\n            open_issues: open_issues,\n            owner: {\n              avatar_url: owner.avatar_url,\n              login: owner.login,\n              html_url: owner.html_url\n            }\n          };\n        });\n        setRepositories([].concat(_toConsumableArray(_repositories), _toConsumableArray(res)));\n      }\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    setTimeout(function () {\n      setLoading(false);\n    }, 1000);\n  };\n\n  var endOfList = function endOfList(info) {\n    if (!_loading) {\n      getRepos();\n    }\n  };\n\n  var Repositories = function Repositories() {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require(\"../img/GitHub-Mark-Light-120px-plus.png\"),\n      style: styles.headerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    })), _repositories && React.createElement(RepositoryLines, {\n      repositories: _repositories,\n      fetchMore: function fetchMore(info) {\n        return endOfList(info);\n      },\n      isLoading: _loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 31\n      }\n    }));\n  };\n\n  var Repository = function Repository() {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require(\"../img/GitHub-Mark-Light-120px-plus.png\"),\n      style: styles.headerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    })), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"VIDE\"));\n  };\n\n  return React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Repositories\",\n    component: Repositories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Repository\",\n    component: Repository,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS_THEME.border_primary,\n    paddingTop: 8,\n    paddingBottom: 16,\n    backgroundColor: COLORS_THEME.bg_primary\n  },\n  headerImage: {\n    width: 32,\n    height: 32\n  }\n});\nexport default RepositoryView;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/Repository.tsx"],"names":["React","useState","useEffect","RepositoryLines","COLORS_THEME","createStackNavigator","STORAGE_KEY","Stack","RepositoryView","_loading","setLoading","_repositories","setRepositories","getRepos","lastMonth","Date","setMonth","getMonth","toISOString","split","page","Math","ceil","length","fetch","then","response","json","responseJson","items","res","map","id","name","description","html_url","language","stargazers_count","open_issues","owner","avatar_url","login","catch","error","console","log","setTimeout","endOfList","info","Repositories","styles","container","header","require","headerImage","Repository","StyleSheet","create","display","flex","alignItems","justifyContent","alignSelf","borderBottomWidth","borderBottomColor","border_primary","paddingTop","paddingBottom","backgroundColor","bg_primary","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Image, View, Text } from 'react-native';\nimport { RepositoryModel } from '../model/repository';\nimport RepositoryLines from './RepositoryLines';\nimport { COLORS_THEME } from '../constants/colors';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\ninterface Response {\n    incomplete_results: boolean;\n    items: RepositoryModel[];\n    total_count: number;\n}\n\nconst STORAGE_KEY = '@starred_repositories';\nconst Stack = createStackNavigator();\n\nconst RepositoryView = () => {\n\n    const [_loading, setLoading] = useState<boolean>(false);\n    const [_repositories, setRepositories] = useState<RepositoryModel[]>([]);\n\n\n    useEffect(() => {\n        getRepos();\n    }, [])\n\n    const getRepos = () => {\n        setLoading(true);\n\n\n        const lastMonth = new Date(new Date().setMonth(new Date().getMonth() - 1))\n            .toISOString()\n            .split('T')[0];\n        const page = Math.ceil(_repositories.length / 24) + 1;\n\n        fetch('https://api.github.com/search/repositories?q=created:>' + lastMonth + '&sort=stars&order=desc&per_page=24&page=' + page, {\n            'headers': {\n                'Authorization': \"token 66ef3f80be2e4f109bfbb55831bb0e88006281b1\"\n            }\n        })\n            .then(response => response.json())\n            .then((responseJson: Response) => {\n\n                if (responseJson.items) {\n                    const res: RepositoryModel[] = responseJson.items.map(({\n                        id,\n                        name,\n                        description,\n                        html_url,\n                        language,\n                        stargazers_count,\n                        open_issues,\n                        owner\n                    }) => {\n\n                        return ({\n                            id,\n                            name,\n                            description,\n                            html_url,\n                            language,\n                            stargazers_count,\n                            open_issues,\n                            owner: {\n                                avatar_url: owner.avatar_url,\n                                login: owner.login,\n                                html_url: owner.html_url\n                            }\n                        })\n                    });\n                    setRepositories([..._repositories, ...res]);\n                }\n            })\n            .catch(error => console.log(error));\n\n        setTimeout(() => {\n            setLoading(false);\n        }, 1000);\n\n    }\n\n\n    const endOfList = (info: any) => {\n\n        if (!_loading) {\n            getRepos();\n        }\n    }\n\n    const Repositories = () => {\n        return (<View style={styles.container}>\n            <View style={styles.header}><Image source={require('../img/GitHub-Mark-Light-120px-plus.png')} style={styles.headerImage} /></View>\n            {_repositories && <RepositoryLines repositories={_repositories} fetchMore={(info: any) => endOfList(info)} isLoading={_loading}></RepositoryLines>}\n        </View>);\n    }\n\n    const Repository = () => {\n        return (<View style={styles.container}>\n            <View style={styles.header}><Image source={require('../img/GitHub-Mark-Light-120px-plus.png')} style={styles.headerImage} /></View>\n            <Text>VIDE</Text>\n        </View>);\n    }\n\n    return (\n        //headerMode={\"none\"} to not show the header with the name of the scree\n        <Stack.Navigator headerMode={\"none\"}>\n            <Stack.Screen name=\"Repositories\" component={Repositories} />\n            <Stack.Screen name=\"Repository\" component={Repository} />\n        </Stack.Navigator>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        alignItems: 'stretch',\n        justifyContent: 'center',\n\n    },\n    header: {\n        display: \"flex\",\n        alignItems: \"center\",\n        alignSelf: \"stretch\",\n        borderBottomWidth: 2,\n        borderBottomColor: COLORS_THEME.border_primary,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: COLORS_THEME.bg_primary,\n    },\n    headerImage: {\n        width: 32,\n        height: 32,\n    }\n});\n\nexport default RepositoryView;"]},"metadata":{},"sourceType":"module"}