{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Hedia/frosty/views/Repository.tsx\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar RepositoryView = function RepositoryView() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromFetch = _useState2[0],\n      setFromFetch = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataSource = _useState6[0],\n      setDataSource = _useState6[1];\n\n  var getRepos = function getRepos() {\n    setFromFetch(true);\n    setLoading(false);\n    var lastMonth = new Date(new Date().setMonth(new Date().getMonth() - 1)).toISOString().split('T')[0];\n    fetch('https://api.github.com/search/repositories?q=created:>' + lastMonth + '&sort=stars&order=desc').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log('getting data from fetch', responseJson);\n      setLoading(false);\n      setDataSource(responseJson);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: loading ? \"loading\" : \"Load\",\n    onPress: getRepos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#9a9ec9',\n    backgroundColor: '#4b56a4',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default RepositoryView;","map":{"version":3,"sources":["/Users/franckcaget/Hedia/frosty/views/Repository.tsx"],"names":["StatusBar","React","useState","RepositoryView","fromFetch","setFromFetch","loading","setLoading","dataSource","setDataSource","getRepos","lastMonth","Date","setMonth","getMonth","toISOString","split","fetch","then","response","json","responseJson","console","log","catch","error","styles","container","StyleSheet","create","flex","color","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBAESD,QAAQ,CAAC,KAAD,CAFjB;AAAA;AAAA,MAElBE,SAFkB;AAAA,MAEPC,YAFO;;AAAA,mBAGKH,QAAQ,CAAC,KAAD,CAHb;AAAA;AAAA,MAGlBI,OAHkB;AAAA,MAGTC,UAHS;;AAAA,mBAIWL,QAAQ,CAAC,IAAD,CAJnB;AAAA;AAAA,MAIlBM,UAJkB;AAAA,MAINC,aAJM;;AAMzB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,QAAMI,SAAS,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,QAAX,CAAoB,IAAID,IAAJ,GAAWE,QAAX,KAAwB,CAA5C,CAAT,EACbC,WADa,GAEbC,KAFa,CAEP,GAFO,EAEF,CAFE,CAAlB;AAIAC,IAAAA,KAAK,CAAC,2DAA2DN,SAA3D,GAAuE,wBAAxE,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADlB,EAEKF,IAFL,CAEU,UAACG,YAAD,EAAkB;AAGpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,YAAvC;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,aAAa,CAACY,YAAD,CAAb;AACH,KARL,EASKG,KATL,CASW,UAAAC,KAAK;AAAA,aAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAJ;AAAA,KAThB;AAUH,GAjBD;;AAmBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAErB,OAAO,GAAG,SAAH,GAAe,MAArC;AAA6C,IAAA,OAAO,EAAEI,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA/BD;;AAkCA,IAAMgB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,KAAK,EAAE,SAFA;AAGPC,IAAAA,eAAe,EAAE,SAHV;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,cAAc,EAAE;AALT;AADkB,CAAlB,CAAf;AAUA,eAAe/B,cAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Image, View, Button } from 'react-native';\nimport { Repos } from '../model/repos';\n\ninterface Response {\n    incomplete_results: boolean;\n    items: Repos[];\n    total_count: number;\n}\n\n\nconst RepositoryView = () => {\n\n    const [fromFetch, setFromFetch] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [dataSource, setDataSource] = useState(null);\n\n    const getRepos = () => {\n        setFromFetch(true);\n        setLoading(false);\n        const lastMonth = new Date(new Date().setMonth(new Date().getMonth() - 1))\n            .toISOString()\n            .split('T')[0];\n\n        fetch('https://api.github.com/search/repositories?q=created:>' + lastMonth + '&sort=stars&order=desc')\n            .then(response => response.json())\n            .then((responseJson) => {\n                //responseJson.item.map((response: any) => { console.log(response); });\n\n                console.log('getting data from fetch', responseJson)\n                setLoading(false);\n                setDataSource(responseJson);\n            })\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <View style={styles.container}>\n            <Button title={loading ? \"loading\" : \"Load\"} onPress={getRepos} />\n            <StatusBar style=\"auto\" />\n        </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        color: '#9a9ec9',\n        backgroundColor: '#4b56a4',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nexport default RepositoryView;"]},"metadata":{},"sourceType":"module"}