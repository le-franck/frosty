{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/RepositoryLines.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RepositoryLine from \"./RepositoryLine\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { COLORS_THEME } from \"../constants/colors\";\nvar STORAGE_KEY = '@starred_repositories';\n\nvar RepositoryLines = function RepositoryLines(_ref) {\n  var repositories = _ref.repositories,\n      fetchMore = _ref.fetchMore,\n      isLoading = _ref.isLoading;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      _starredRepositories = _useState2[0],\n      setStarredRepositories = _useState2[1];\n\n  var footer = function footer() {\n    return isLoading ? React.createElement(ActivityIndicator, {\n      style: {\n        flexGrow: 1\n      },\n      size: \"large\",\n      color: \"#608BB3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }\n    }) : React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 105\n      }\n    });\n  };\n\n  useEffect(function () {\n    readData();\n  }, []);\n\n  var readData = function readData() {\n    var starredRepositories, starredRepositoriesParsed;\n    return _regeneratorRuntime.async(function readData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n          case 3:\n            starredRepositories = _context.sent;\n            starredRepositoriesParsed = [];\n            if (starredRepositories) starredRepositoriesParsed = JSON.parse(starredRepositories);\n            setStarredRepositories(starredRepositoriesParsed);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var saveData = function saveData(id) {\n    var starredRepositories, starredRepositoriesParsed, index;\n    return _regeneratorRuntime.async(function saveData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n          case 3:\n            starredRepositories = _context2.sent;\n            starredRepositoriesParsed = [];\n            if (starredRepositories) starredRepositoriesParsed = JSON.parse(starredRepositories);\n            index = starredRepositoriesParsed.indexOf(id);\n\n            if (index > -1) {\n              starredRepositoriesParsed.splice(index, 1);\n            } else {\n              starredRepositoriesParsed.push(id);\n            }\n\n            setStarredRepositories(starredRepositoriesParsed);\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(starredRepositoriesParsed)));\n\n          case 11:\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('There was an error saving the product');\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    data: repositories,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(RepositoryLine, {\n        repository: item,\n        isStarred: _starredRepositories.includes(item.id),\n        toggleIsStarred: saveData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 70\n        }\n      });\n    },\n    ListFooterComponent: footer,\n    ListFooterComponentStyle: styles.loader,\n    keyExtractor: function keyExtractor(item) {\n      return item.id + '';\n    },\n    onEndReachedThreshold: 0.01,\n    onEndReached: function onEndReached(info) {\n      fetchMore(info);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: COLORS_THEME.bg_secondary\n  },\n  loader: {\n    display: \"flex\",\n    flexGrow: 1,\n    alignContent: \"center\",\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default RepositoryLines;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/RepositoryLines.tsx"],"names":["React","useEffect","useState","RepositoryLine","AsyncStorage","COLORS_THEME","STORAGE_KEY","RepositoryLines","repositories","fetchMore","isLoading","_starredRepositories","setStarredRepositories","footer","flexGrow","readData","getItem","starredRepositories","starredRepositoriesParsed","JSON","parse","alert","saveData","id","index","indexOf","splice","push","setItem","stringify","console","log","styles","container","item","includes","loader","info","StyleSheet","create","display","flex","backgroundColor","bg_secondary","alignContent","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView, View, FlatList, StyleSheet, ActivityIndicator } from 'react-native';\nimport { RepositoryModel } from '../model/repository';\nimport RepositoryLine from './RepositoryLine';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { COLORS_THEME } from '../constants/colors';\n\nconst STORAGE_KEY = '@starred_repositories';\n\nconst RepositoryLines = ({ repositories, fetchMore, isLoading }: { repositories: RepositoryModel[], fetchMore: Function, isLoading: boolean }) => {\n\n    const [_starredRepositories, setStarredRepositories] = useState<string[]>([]);\n\n    const footer = () => {\n        return isLoading ? <ActivityIndicator style={{ flexGrow: 1 }} size=\"large\" color=\"#608BB3\" /> : <View ></View>\n    }\n\n    useEffect(() => {\n        readData();\n    }, [])\n\n    const readData = async () => {\n        try {\n            const starredRepositories = await AsyncStorage.getItem(STORAGE_KEY);\n            let starredRepositoriesParsed = [];\n            if (starredRepositories)\n                starredRepositoriesParsed = JSON.parse(starredRepositories);\n            setStarredRepositories(starredRepositoriesParsed);\n\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    const saveData = async (id: string) => {\n        try {\n            const starredRepositories = await AsyncStorage.getItem(STORAGE_KEY);\n            let starredRepositoriesParsed = [];\n            if (starredRepositories)\n                starredRepositoriesParsed = JSON.parse(starredRepositories);\n\n            const index = starredRepositoriesParsed.indexOf(id);\n            if (index > -1) {\n                starredRepositoriesParsed.splice(index, 1);\n            } else {\n                starredRepositoriesParsed.push(id);\n            }\n            setStarredRepositories(starredRepositoriesParsed);\n            await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(starredRepositoriesParsed));\n\n        } catch (e) {\n            console.log('There was an error saving the product');\n        }\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <FlatList\n                contentContainerStyle={{ flexGrow: 1 }}\n                data={repositories}\n                renderItem={({ item }: { item: RepositoryModel }) => <RepositoryLine repository={item} isStarred={_starredRepositories.includes(item.id)} toggleIsStarred={saveData} />}\n                ListFooterComponent={footer}\n                ListFooterComponentStyle={styles.loader}\n                keyExtractor={(item: { id: string; }) => item.id + ''}\n                onEndReachedThreshold={0.01}\n                onEndReached={info => {\n                    fetchMore(info);\n                }}\n            />\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        backgroundColor: COLORS_THEME.bg_secondary,\n\n    },\n    loader: {\n        display: \"flex\",\n        flexGrow: 1,\n        alignContent: \"center\",\n        marginTop: 16,\n        marginBottom: 16,\n\n    }\n});\n\n\nexport default RepositoryLines;"]},"metadata":{},"sourceType":"module"}