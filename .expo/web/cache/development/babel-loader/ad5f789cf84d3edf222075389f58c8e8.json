{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Hedia/frosty/views/RepositoryLine.tsx\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-community/async-storage';\nvar STORAGE_KEY = '@starred_repositories';\n\nvar RepositoryLine = function RepositoryLine(_ref) {\n  var repository = _ref.repository;\n\n  var saveData = function saveData() {\n    return _regeneratorRuntime.async(function saveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, repository.id));\n\n          case 3:\n            alert('Data successfully saved');\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            alert('Failed to save the data to the storage');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return repository ? React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }\n  }, React.createElement(View, {\n    style: styles.firstLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, repository.owner.login, \" / \", repository.name, \" \"), React.createElement(TouchableOpacity, {\n    style: styles.stars,\n    activeOpacity: 0.5,\n    onPress: saveData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, React.createElement(Icon, {\n    name: \"star-o\",\n    size: 16,\n    color: \"#4C4C58\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginLeft: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, repository.stargazers_count))), repository.description && React.createElement(Text, {\n    style: styles.description,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 44\n    }\n  }, repository.description)) : React.createElement(ActivityIndicator, {\n    style: {\n      flexGrow: 1\n    },\n    size: \"large\",\n    color: \"#608BB3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  item: {\n    padding: 8,\n    marginHorizontal: 16,\n    borderBottomColor: \"#E6E6E6\",\n    borderBottomWidth: 1,\n    fontSize: 14,\n    color: \"#4C4C58\"\n  },\n  stars: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"baseline\",\n    marginLeft: 8\n  },\n  title: {\n    color: \"#608BB3\",\n    flexShrink: 1\n  },\n  description: {\n    color: \"#4C4C58\",\n    fontSize: 12,\n    marginBottom: 8\n  },\n  language: {\n    color: \"#4C4C58\",\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  firstLine: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    position: \"relative\"\n  }\n});\nexport default RepositoryLine;","map":{"version":3,"sources":["/Users/franckcaget/Hedia/frosty/views/RepositoryLine.tsx"],"names":["React","Icon","AsyncStorage","STORAGE_KEY","RepositoryLine","repository","saveData","setItem","id","alert","styles","item","firstLine","title","owner","login","name","stars","marginLeft","stargazers_count","description","flexGrow","StyleSheet","create","padding","marginHorizontal","borderBottomColor","borderBottomWidth","fontSize","color","display","flexDirection","alignItems","flexShrink","marginBottom","language","fontWeight","justifyContent","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, ActivityIndicator, TouchableOpacity } from 'react-native';\nimport { RepositoryModel } from '../model/repository';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst STORAGE_KEY = '@starred_repositories';\n\nconst RepositoryLine = ({ repository }: { repository: RepositoryModel }) => {\n\n    const saveData = async () => {\n        try {\n            await AsyncStorage.setItem(STORAGE_KEY, repository.id)\n            alert('Data successfully saved')\n        } catch (e) {\n            alert('Failed to save the data to the storage')\n        }\n    }\n\n    return (\n        repository ?\n            (<View style={styles.item}>\n                <View style={styles.firstLine}>\n                    <Text style={styles.title} numberOfLines={1}>{repository.owner.login} / {repository.name} </Text>\n                    <TouchableOpacity style={styles.stars} activeOpacity={0.5} onPress={saveData}>\n                        <Icon name=\"star-o\" size={16} color={\"#4C4C58\"} />\n                        <Text style={{ marginLeft: 2 }} >{repository.stargazers_count}</Text>\n                    </TouchableOpacity>\n                </View>\n                {repository.description && < Text style={styles.description} numberOfLines={2}>{repository.description}</Text>}\n                {/*item.language && <Text style={styles.language} >{item.language}</Text>*/}\n            </View >) : <ActivityIndicator style={{ flexGrow: 1 }} size=\"large\" color=\"#608BB3\" />\n    )\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        padding: 8,\n        marginHorizontal: 16,\n        borderBottomColor: \"#E6E6E6\",\n        borderBottomWidth: 1,\n        fontSize: 14,\n        color: \"#4C4C58\",\n    },\n    stars: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"baseline\",\n        marginLeft: 8,\n    },\n    title: {\n        color: \"#608BB3\",\n        flexShrink: 1,\n    },\n    description: {\n        color: \"#4C4C58\",\n        fontSize: 12,\n        marginBottom: 8,\n    },\n    language: {\n        color: \"#4C4C58\",\n        fontSize: 12,\n        fontWeight: 'bold'\n    },\n    firstLine: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: 8,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexGrow: 1,\n        position: \"relative\"\n    },\n});\n\n\nexport default RepositoryLine;"]},"metadata":{},"sourceType":"module"}