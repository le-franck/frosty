{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/RepositoryLines.tsx\";\n\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RepositoryLine from \"./RepositoryLine\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { COLORS_THEME, STORAGE_KEY } from \"../utils/constants\";\n\nvar RepositoryLines = function RepositoryLines(_ref) {\n  var repositories = _ref.repositories,\n      fetchMore = _ref.fetchMore,\n      isLoading = _ref.isLoading,\n      starredRepositories = _ref.starredRepositories,\n      navigation = _ref.navigation;\n\n  var _useState = useState(_toConsumableArray(starredRepositories)),\n      _useState2 = _slicedToArray(_useState, 2),\n      _starredRepositories = _useState2[0],\n      setStarredRepositories = _useState2[1];\n\n  var footer = function footer() {\n    return isLoading ? React.createElement(ActivityIndicator, {\n      style: {\n        flexGrow: 1\n      },\n      size: \"large\",\n      color: COLORS_THEME.info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }\n    }) : React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 115\n      }\n    });\n  };\n\n  var saveData = function saveData(id) {\n    var _starredRepositories2, starredRepositoriesParsed, index;\n\n    return _regeneratorRuntime.async(function saveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n          case 3:\n            _starredRepositories2 = _context.sent;\n            starredRepositoriesParsed = [];\n            if (_starredRepositories2) starredRepositoriesParsed = JSON.parse(_starredRepositories2);\n            index = starredRepositoriesParsed.indexOf(id);\n\n            if (index > -1) {\n              starredRepositoriesParsed.splice(index, 1);\n            } else {\n              starredRepositoriesParsed.push(id);\n            }\n\n            setStarredRepositories(starredRepositoriesParsed);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(starredRepositoriesParsed)));\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('There was an error saving the product');\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    data: repositories,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(RepositoryLine, {\n        repository: item,\n        isStarred: _starredRepositories.includes(item.id),\n        toggleIsStarred: saveData,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 75\n        }\n      });\n    },\n    ListFooterComponent: footer,\n    ListFooterComponentStyle: styles.loader,\n    keyExtractor: function keyExtractor(item) {\n      return item.id + '';\n    },\n    onEndReachedThreshold: 0.01,\n    onEndReached: function onEndReached(info) {\n      fetchMore(info);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: COLORS_THEME.bg_secondary\n  },\n  loader: {\n    display: \"flex\",\n    flexGrow: 1,\n    alignContent: \"center\",\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default RepositoryLines;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/RepositoryLines.tsx"],"names":["React","useState","RepositoryLine","AsyncStorage","COLORS_THEME","STORAGE_KEY","RepositoryLines","repositories","fetchMore","isLoading","starredRepositories","navigation","_starredRepositories","setStarredRepositories","footer","flexGrow","info","saveData","id","getItem","starredRepositoriesParsed","JSON","parse","index","indexOf","splice","push","setItem","stringify","console","log","styles","container","item","includes","loader","StyleSheet","create","display","flex","backgroundColor","bg_secondary","alignContent","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView, View, FlatList, StyleSheet, ActivityIndicator } from 'react-native';\nimport { RepositoryLightModel } from '../model/repository_light';\nimport RepositoryLine from './RepositoryLine';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { COLORS_THEME, STORAGE_KEY } from '../utils/constants';\n\nconst RepositoryLines = ({ repositories, fetchMore, isLoading, starredRepositories, navigation }: { repositories: RepositoryLightModel[], fetchMore: Function, isLoading: boolean, starredRepositories: string[], navigation: any }) => {\n\n    const [_starredRepositories, setStarredRepositories] = useState<string[]>([...starredRepositories]);\n\n    const footer = () => {\n        return isLoading ? <ActivityIndicator style={{ flexGrow: 1 }} size=\"large\" color={COLORS_THEME.info} /> : <View ></View>\n    }\n\n    const saveData = async (id: string) => {\n        try {\n            const starredRepositories = await AsyncStorage.getItem(STORAGE_KEY);\n            let starredRepositoriesParsed = [];\n            if (starredRepositories)\n                starredRepositoriesParsed = JSON.parse(starredRepositories);\n\n            const index = starredRepositoriesParsed.indexOf(id);\n            if (index > -1) {\n                starredRepositoriesParsed.splice(index, 1);\n            } else {\n                starredRepositoriesParsed.push(id);\n            }\n            setStarredRepositories(starredRepositoriesParsed);\n            await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(starredRepositoriesParsed));\n        } catch (e) {\n            console.log('There was an error saving the product');\n        }\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <FlatList\n                contentContainerStyle={{ flexGrow: 1 }}\n                data={repositories}\n                renderItem={({ item }: { item: RepositoryLightModel }) => <RepositoryLine repository={item} isStarred={_starredRepositories.includes(item.id)} toggleIsStarred={saveData} navigation={navigation} />}\n                ListFooterComponent={footer}\n                ListFooterComponentStyle={styles.loader}\n                keyExtractor={(item: { id: string; }) => item.id + ''}\n                onEndReachedThreshold={0.01}\n                onEndReached={info => {\n                    fetchMore(info);\n                }}\n            />\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        backgroundColor: COLORS_THEME.bg_secondary,\n\n    },\n    loader: {\n        display: \"flex\",\n        flexGrow: 1,\n        alignContent: \"center\",\n        marginTop: 16,\n        marginBottom: 16,\n\n    }\n});\n\n\nexport default RepositoryLines;"]},"metadata":{},"sourceType":"module"}