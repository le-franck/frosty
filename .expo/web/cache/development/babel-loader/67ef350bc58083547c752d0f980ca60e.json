{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/RepositoryNavigator.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport RepositoryLines from \"./RepositoryLines\";\nimport RepositoryView from \"./Repository\";\nimport { COLORS_THEME, STORAGE_KEY } from \"../utils/constants\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nvar Stack = createStackNavigator();\n\nvar RepositoryNavigator = function RepositoryNavigator() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      _loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _repositories = _useState4[0],\n      setRepositories = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _starredRepositories = _useState6[0],\n      setStarredRepositories = _useState6[1];\n\n  useEffect(function () {\n    getRepos();\n    readData();\n  }, []);\n\n  var readData = function readData() {\n    var starredRepositories, starredRepositoriesParsed;\n    return _regeneratorRuntime.async(function readData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n          case 3:\n            starredRepositories = _context.sent;\n            starredRepositoriesParsed = [];\n            if (starredRepositories) starredRepositoriesParsed = JSON.parse(starredRepositories);\n            setStarredRepositories(starredRepositoriesParsed);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var getRepos = function getRepos() {\n    setLoading(true);\n    var lastMonth = new Date(new Date().setMonth(new Date().getMonth() - 1)).toISOString().split('T')[0];\n    var page = Math.ceil(_repositories.length / 24) + 1;\n    fetch('https://api.github.com/search/repositories?q=created:>' + lastMonth + '&sort=stars&order=desc&per_page=24&page=' + page, {\n      'headers': {\n        'Authorization': \"token 66ef3f80be2e4f109bfbb55831bb0e88006281b1\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (responseJson.items) {\n        var res = responseJson.items.map(function (_ref) {\n          var id = _ref.id,\n              name = _ref.name,\n              description = _ref.description,\n              stargazers_count = _ref.stargazers_count,\n              owner = _ref.owner;\n          return {\n            id: id,\n            name: name,\n            description: description,\n            stargazers_count: stargazers_count,\n            owner: {\n              login: owner.login\n            }\n          };\n        });\n        setRepositories([].concat(_toConsumableArray(_repositories), _toConsumableArray(res)));\n      }\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    setTimeout(function () {\n      setLoading(false);\n    }, 1000);\n  };\n\n  var endOfList = function endOfList() {\n    if (!_loading) {\n      getRepos();\n    }\n  };\n\n  var Repositories = function Repositories(_ref2) {\n    var navigation = _ref2.navigation;\n    console.log(navigation);\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../img/GitHub-Mark-Light-120px-plus.png\"),\n      style: styles.headerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    })), _repositories && React.createElement(RepositoryLines, {\n      repositories: _repositories,\n      fetchMore: function fetchMore() {\n        return endOfList();\n      },\n      isLoading: _loading,\n      starredRepositories: _starredRepositories,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }\n    }));\n  };\n\n  var Repository = function Repository(_ref3) {\n    var route = _ref3.route,\n        navigation = _ref3.navigation;\n    console.log(navigation);\n    var _route$params = route.params,\n        owner = _route$params.owner,\n        repo = _route$params.repo;\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"arrow-right\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }),\n      title: \"Button with icon component\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"arrow-right\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }),\n      title: \"Back\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), React.createElement(Image, {\n      source: require(\"../img/GitHub-Mark-Light-120px-plus.png\"),\n      style: styles.headerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 85\n      }\n    })), React.createElement(RepositoryView, {\n      owner: owner,\n      repo: repo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Repositories\",\n    component: Repositories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Repository\",\n    component: Repository,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: \"flex-start\"\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS_THEME.border_primary,\n    paddingTop: 8,\n    paddingBottom: 16,\n    backgroundColor: COLORS_THEME.bg_primary\n  },\n  headerImage: {\n    width: 32,\n    height: 32\n  }\n});\nexport default RepositoryNavigator;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/RepositoryNavigator.tsx"],"names":["React","useState","useEffect","RepositoryLines","RepositoryView","COLORS_THEME","STORAGE_KEY","AsyncStorage","createStackNavigator","Icon","Stack","RepositoryNavigator","_loading","setLoading","_repositories","setRepositories","_starredRepositories","setStarredRepositories","getRepos","readData","getItem","starredRepositories","starredRepositoriesParsed","JSON","parse","alert","lastMonth","Date","setMonth","getMonth","toISOString","split","page","Math","ceil","length","fetch","then","response","json","responseJson","items","res","map","id","name","description","stargazers_count","owner","login","catch","error","console","log","setTimeout","endOfList","Repositories","navigation","styles","container","header","require","headerImage","Repository","route","params","repo","goBack","StyleSheet","create","display","flex","alignItems","justifyContent","flexDirection","alignSelf","borderBottomWidth","borderBottomColor","border_primary","paddingTop","paddingBottom","backgroundColor","bg_primary","width","height"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,SAASC,YAAT,EAAuBC,WAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,IAAP;AAQA,IAAMC,KAAK,GAAGF,oBAAoB,EAAlC;;AAEA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAAA,kBAECV,QAAQ,CAAU,KAAV,CAFT;AAAA;AAAA,MAEvBW,QAFuB;AAAA,MAEbC,UAFa;;AAAA,mBAGWZ,QAAQ,CAAyB,EAAzB,CAHnB;AAAA;AAAA,MAGvBa,aAHuB;AAAA,MAGRC,eAHQ;;AAAA,mBAIyBd,QAAQ,CAAW,EAAX,CAJjC;AAAA;AAAA,MAIvBe,oBAJuB;AAAA,MAIDC,sBAJC;;AAO9Bf,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,QAAQ;AACRC,IAAAA,QAAQ;AACX,GAHQ,EAGN,EAHM,CAAT;;AAOA,MAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEyBZ,YAAY,CAACa,OAAb,CAAqBd,WAArB,CAFzB;;AAAA;AAEHe,YAAAA,mBAFG;AAGLC,YAAAA,yBAHK,GAGuB,EAHvB;AAIT,gBAAID,mBAAJ,EACIC,yBAAyB,GAAGC,IAAI,CAACC,KAAL,CAAWH,mBAAX,CAA5B;AACJJ,YAAAA,sBAAsB,CAACK,yBAAD,CAAtB;AANS;AAAA;;AAAA;AAAA;AAAA;AASTG,YAAAA,KAAK,aAAL;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAaA,MAAMP,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBL,IAAAA,UAAU,CAAC,IAAD,CAAV;AAGA,QAAMa,SAAS,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,QAAX,CAAoB,IAAID,IAAJ,GAAWE,QAAX,KAAwB,CAA5C,CAAT,EACbC,WADa,GAEbC,KAFa,CAEP,GAFO,EAEF,CAFE,CAAlB;AAGA,QAAMC,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUpB,aAAa,CAACqB,MAAd,GAAuB,EAAjC,IAAuC,CAApD;AAEAC,IAAAA,KAAK,CAAC,2DAA2DV,SAA3D,GAAuE,0CAAvE,GAAoHM,IAArH,EAA2H;AAC5H,iBAAW;AACP,yBAAiB;AADV;AADiH,KAA3H,CAAL,CAKKK,IALL,CAKU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KALlB,EAMKF,IANL,CAMU,UAACG,YAAD,EAA4B;AAE9B,UAAIA,YAAY,CAACC,KAAjB,EAAwB;AACpB,YAAMC,GAA2B,GAAGF,YAAY,CAACC,KAAb,CAAmBE,GAAnB,CAAuB,gBAMrD;AAAA,cALFC,EAKE,QALFA,EAKE;AAAA,cAJFC,IAIE,QAJFA,IAIE;AAAA,cAHFC,WAGE,QAHFA,WAGE;AAAA,cAFFC,gBAEE,QAFFA,gBAEE;AAAA,cADFC,KACE,QADFA,KACE;AAEF,iBAAQ;AACJJ,YAAAA,EAAE,EAAFA,EADI;AAEJC,YAAAA,IAAI,EAAJA,IAFI;AAGJC,YAAAA,WAAW,EAAXA,WAHI;AAIJC,YAAAA,gBAAgB,EAAhBA,gBAJI;AAKJC,YAAAA,KAAK,EAAE;AACHC,cAAAA,KAAK,EAAED,KAAK,CAACC;AADV;AALH,WAAR;AASH,SAjBmC,CAApC;AAkBAlC,QAAAA,eAAe,8BAAKD,aAAL,sBAAuB4B,GAAvB,GAAf;AACH;AACJ,KA7BL,EA8BKQ,KA9BL,CA8BW,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KA9BhB;AAgCAG,IAAAA,UAAU,CAAC,YAAM;AACbzC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GA5CD;;AA+CA,MAAM0C,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAI,CAAC3C,QAAL,EAAe;AACXM,MAAAA,QAAQ;AACX;AACJ,GAJD;;AAMA,MAAMsC,YAAY,GAAG,SAAfA,YAAe,QAAyB;AAAA,QAAtBC,UAAsB,SAAtBA,UAAsB;AAC1CL,IAAAA,OAAO,CAACC,GAAR,CAAaI,UAAb;AAEA,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,OAAO,2CAAtB;AAAmE,MAAA,KAAK,EAAEH,MAAM,CAACI,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CADJ,EAEKhD,aAAa,IAAI,oBAAC,eAAD;AAAiB,MAAA,YAAY,EAAEA,aAA/B;AAA8C,MAAA,SAAS,EAAE;AAAA,eAAMyC,SAAS,EAAf;AAAA,OAAzD;AAA4E,MAAA,SAAS,EAAE3C,QAAvF;AAAiG,MAAA,mBAAmB,EAAEI,oBAAtH;AAA4I,MAAA,UAAU,EAAEyC,UAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtB,CADJ;AAKH,GARD;;AAUA,MAAMM,UAAU,GAAG,SAAbA,UAAa,QAA4D;AAAA,QAAzDC,KAAyD,SAAzDA,KAAyD;AAAA,QAAlDP,UAAkD,SAAlDA,UAAkD;AAC3EL,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AAD2E,wBAGnDO,KAAK,CAACC,MAH6C;AAAA,QAGnEjB,KAHmE,iBAGnEA,KAHmE;AAAA,QAG5DkB,IAH4D,iBAG5DA,IAH4D;AAI3E,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAER,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,MAAD;AACI,MAAA,IAAI,EACA,oBAAC,IAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,IAAI,EAAE,EAFV;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAQI,MAAA,KAAK,EAAC,4BARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAcI,oBAAC,MAAD;AACI,MAAA,IAAI,EACA,oBAAC,IAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,IAAI,EAAE,EAFV;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAOI,MAAA,KAAK,EAAE,MAPX;AAOmB,MAAA,OAAO,EAAE;AAAA,eAAMH,UAAU,CAACU,MAAX,EAAN;AAAA,OAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAqBoE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEN,OAAO,2CAAtB;AAAmE,MAAA,KAAK,EAAEH,MAAM,CAACI,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBpE,CADJ,EAuBI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEd,KAAvB;AAA8B,MAAA,IAAI,EAAEkB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,CADJ;AA0BH,GA9BD;;AAgCA,SAEI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,UAAU,EAAE,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEV,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEO,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AAOH,CAjID;;AAoIA,IAAML,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,IAAI,EAAE,CAFC;AAGPC,IAAAA,UAAU,EAAE,SAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7Bb,EAAAA,MAAM,EAAE;AACJU,IAAAA,OAAO,EAAE,MADL;AAEJI,IAAAA,aAAa,EAAE,KAFX;AAGJF,IAAAA,UAAU,EAAE,QAHR;AAIJG,IAAAA,SAAS,EAAE,SAJP;AAKJC,IAAAA,iBAAiB,EAAE,CALf;AAMJC,IAAAA,iBAAiB,EAAExE,YAAY,CAACyE,cAN5B;AAOJC,IAAAA,UAAU,EAAE,CAPR;AAQJC,IAAAA,aAAa,EAAE,EARX;AASJC,IAAAA,eAAe,EAAE5E,YAAY,CAAC6E;AAT1B,GAPqB;AAkB7BpB,EAAAA,WAAW,EAAE;AACTqB,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE;AAFC;AAlBgB,CAAlB,CAAf;AAwBA,eAAezE,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Image, View, Button } from 'react-native';\nimport RepositoryLines from './RepositoryLines';\nimport RepositoryView from './Repository';\nimport { COLORS_THEME, STORAGE_KEY } from '../utils/constants';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RepositoryLightModel } from '../model/repository_light';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\ninterface Response {\n    incomplete_results: boolean;\n    items: RepositoryLightModel[];\n    total_count: number;\n}\n\nconst Stack = createStackNavigator();\n\nconst RepositoryNavigator = () => {\n\n    const [_loading, setLoading] = useState<boolean>(false);\n    const [_repositories, setRepositories] = useState<RepositoryLightModel[]>([]);\n    const [_starredRepositories, setStarredRepositories] = useState<string[]>([]);\n\n\n    useEffect(() => {\n        getRepos();\n        readData();\n    }, [])\n\n\n    //had to move this here because Typescript does not let me cancel asynch function in a useEffect return () => false \n    const readData = async () => {\n        try {\n            const starredRepositories = await AsyncStorage.getItem(STORAGE_KEY);\n            let starredRepositoriesParsed = [];\n            if (starredRepositories)\n                starredRepositoriesParsed = JSON.parse(starredRepositories);\n            setStarredRepositories(starredRepositoriesParsed);\n\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    const getRepos = () => {\n        setLoading(true);\n\n\n        const lastMonth = new Date(new Date().setMonth(new Date().getMonth() - 1))\n            .toISOString()\n            .split('T')[0];\n        const page = Math.ceil(_repositories.length / 24) + 1;\n\n        fetch('https://api.github.com/search/repositories?q=created:>' + lastMonth + '&sort=stars&order=desc&per_page=24&page=' + page, {\n            'headers': {\n                'Authorization': \"token 66ef3f80be2e4f109bfbb55831bb0e88006281b1\"\n            }\n        })\n            .then(response => response.json())\n            .then((responseJson: Response) => {\n\n                if (responseJson.items) {\n                    const res: RepositoryLightModel[] = responseJson.items.map(({\n                        id,\n                        name,\n                        description,\n                        stargazers_count,\n                        owner\n                    }) => {\n\n                        return ({\n                            id,\n                            name,\n                            description,\n                            stargazers_count,\n                            owner: {\n                                login: owner.login,\n                            }\n                        })\n                    });\n                    setRepositories([..._repositories, ...res]);\n                }\n            })\n            .catch(error => console.log(error));\n\n        setTimeout(() => {\n            setLoading(false);\n        }, 1000);\n    }\n\n\n    const endOfList = () => {\n        if (!_loading) {\n            getRepos();\n        }\n    }\n\n    const Repositories = ({ navigation }: any) => {\n        console.log((navigation));\n\n        return (\n            <View style={styles.container}>\n                <View style={styles.header}><Image source={require('../img/GitHub-Mark-Light-120px-plus.png')} style={styles.headerImage} /></View>\n                {_repositories && <RepositoryLines repositories={_repositories} fetchMore={() => endOfList()} isLoading={_loading} starredRepositories={_starredRepositories} navigation={navigation}></RepositoryLines>}\n            </View>);\n    }\n\n    const Repository = ({ route, navigation }: { route: any, navigation: any }) => {\n        console.log(navigation);\n\n        const { owner, repo } = route.params;\n        return (\n            <View style={styles.container}>\n                <View style={styles.header}>\n\n\n                    <Button\n                        icon={\n                            <Icon\n                                name=\"arrow-right\"\n                                size={15}\n                                color=\"white\"\n                            />\n                        }\n                        title=\"Button with icon component\"\n                    />\n\n                    <Button\n                        icon={\n                            <Icon\n                                name=\"arrow-right\"\n                                size={15}\n                                color=\"white\"\n                            />}\n                        title={\"Back\"} onPress={() => navigation.goBack()}></Button><Image source={require('../img/GitHub-Mark-Light-120px-plus.png')} style={styles.headerImage} /></View>\n                <RepositoryView owner={owner} repo={repo} />\n            </View>);\n    }\n\n    return (\n        //headerMode={\"none\"} to not show the header with the name of the scree\n        <Stack.Navigator headerMode={\"none\"}>\n            <Stack.Screen name=\"Repositories\" component={Repositories} />\n            <Stack.Screen name=\"Repository\" component={Repository} />\n        </Stack.Navigator>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        alignItems: 'stretch',\n        justifyContent: \"flex-start\",\n    },\n    header: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"stretch\",\n        borderBottomWidth: 2,\n        borderBottomColor: COLORS_THEME.border_primary,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: COLORS_THEME.bg_primary,\n    },\n    headerImage: {\n        width: 32,\n        height: 32,\n    }\n});\n\nexport default RepositoryNavigator;"]},"metadata":{},"sourceType":"module"}