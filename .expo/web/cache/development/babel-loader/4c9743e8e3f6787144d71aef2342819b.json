{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/Profile.tsx\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { COLORS_THEME } from \"../utils/constants\";\n\nvar Profile = function Profile() {\n  var clearAppData = function clearAppData() {\n    var keys;\n    return _regeneratorRuntime.async(function clearAppData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            keys = _context.sent;\n            console.log(\"Keys\", keys);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.multiRemove(keys));\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error clearing app data.');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"clearStorage\",\n    onPress: clearAppData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS_THEME.bg_primary,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/Profile.tsx"],"names":["React","AsyncStorage","COLORS_THEME","Profile","clearAppData","getAllKeys","keys","console","log","multiRemove","error","styles","container","StyleSheet","create","flex","backgroundColor","bg_primary","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,YAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAElB,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMH,YAAY,CAACI,UAAb,EAFN;;AAAA;AAEPC,YAAAA,IAFO;AAGbC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AAHa;AAAA,6CAIPL,YAAY,CAACQ,WAAb,CAAyBH,IAAzB,CAJO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMbC,YAAAA,OAAO,CAACG,KAAR,CAAc,0BAAd;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAUA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,cAAf;AAA+B,IAAA,OAAO,EAAER,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAjBD;;AAmBA,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAEd,YAAY,CAACe,UAFvB;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf;AASA,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { COLORS_THEME } from '../utils/constants';\n\nconst Profile = () => {\n\n    const clearAppData = async function () {\n        try {\n            const keys = await AsyncStorage.getAllKeys();\n            console.log(\"Keys\", keys);\n            await AsyncStorage.multiRemove(keys);\n        } catch (error) {\n            console.error('Error clearing app data.');\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <Button title={\"clearStorage\"} onPress={clearAppData}></Button>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: COLORS_THEME.bg_primary,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}