{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/franckcaget/Desktop/frosty/views/Repository.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { COLORS_THEME } from \"../utils/constants\";\nimport { getRepo } from \"../logic/dataFetch\";\n\nvar RepositoryView = function RepositoryView(_ref) {\n  var owner = _ref.owner,\n      repo = _ref.repo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      _loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _repository = _useState4[0],\n      setRepository = _useState4[1];\n\n  useEffect(function () {\n    setLoading(true);\n    getRepo(setRepository, owner, repo);\n    setLoading(false);\n  }, []);\n\n  var RepositoryWrapper = function RepositoryWrapper() {\n    console.log(_repository);\n    var id = _repository.id,\n        description = _repository.description,\n        forks_count = _repository.forks_count,\n        homepage = _repository.homepage,\n        language = _repository.language,\n        name = _repository.name,\n        open_issues_count = _repository.open_issues_count,\n        owner = _repository.owner,\n        stargazers_count = _repository.stargazers_count,\n        subscribers_count = _repository.subscribers_count,\n        watchers_count = _repository.watchers_count;\n    var login = owner.login,\n        avatar_url = owner.avatar_url;\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.userWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.userPicture,\n      source: {\n        uri: avatar_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.userName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, login)), React.createElement(Text, {\n      style: styles.repoName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, name));\n  };\n\n  return _repository ? React.createElement(RepositoryWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: {\n      flexGrow: 1\n    },\n    size: \"large\",\n    color: COLORS_THEME.info,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 44\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS_THEME.bg_secondary,\n    padding: 16,\n    color: COLORS_THEME.text_primary\n  },\n  userWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  userPicture: {\n    height: 64,\n    width: 64,\n    borderRadius: 40\n  },\n  userName: {\n    color: COLORS_THEME.text_secondary,\n    fontSize: 22,\n    marginLeft: 16\n  },\n  repoName: {\n    color: COLORS_THEME.text_primary,\n    fontSize: 30\n  }\n});\nexport default RepositoryView;","map":{"version":3,"sources":["/Users/franckcaget/Desktop/frosty/views/Repository.tsx"],"names":["React","useState","useEffect","COLORS_THEME","getRepo","RepositoryView","owner","repo","_loading","setLoading","_repository","setRepository","RepositoryWrapper","console","log","id","description","forks_count","homepage","language","name","open_issues_count","stargazers_count","subscribers_count","watchers_count","login","avatar_url","styles","container","userWrapper","userPicture","uri","userName","repoName","flexGrow","info","StyleSheet","create","flex","backgroundColor","bg_secondary","padding","color","text_primary","display","flexDirection","alignItems","height","width","borderRadius","text_secondary","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Text, ActivityIndicator, TouchableOpacity, Image } from 'react-native';\nimport { RepositoryModel } from '../model/repository';\nimport { COLORS_THEME } from '../utils/constants';\nimport { getRepo } from '../logic/dataFetch';\n\nconst RepositoryView = ({ owner, repo }: { owner: string, repo: string }) => {\n    const [_loading, setLoading] = useState<boolean>(false);\n    const [_repository, setRepository] = useState<RepositoryModel>(null)\n\n    useEffect(() => {\n        setLoading(true);\n        getRepo(setRepository, owner, repo)\n        setLoading(false);\n    }, [])\n\n\n    const RepositoryWrapper = () => {\n        console.log(_repository);\n\n        const {\n            id,\n            description,\n            forks_count,\n            homepage,\n            language,\n            name,\n            open_issues_count,\n            owner,\n            stargazers_count,\n            subscribers_count,\n            watchers_count,\n        } = _repository;\n\n        const { login, avatar_url } = owner;\n\n        return (\n            <View style={styles.container}>\n                <View style={styles.userWrapper}>\n                    <Image\n                        style={styles.userPicture}\n                        source={{\n                            uri: avatar_url,\n                        }}\n                    />\n                    <Text style={styles.userName}>{login}</Text>\n                </View>\n                <Text style={styles.repoName}>{name}</Text>\n            </View>)\n    }\n\n\n    return (\n        _repository ? <RepositoryWrapper /> :\n            <View style={styles.container}><ActivityIndicator style={{ flexGrow: 1 }} size=\"large\" color={COLORS_THEME.info} /></View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: COLORS_THEME.bg_secondary,\n        padding: 16,\n        color: COLORS_THEME.text_primary,\n    },\n    userWrapper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    userPicture: {\n        height: 64,\n        width: 64,\n        borderRadius: 40,\n    },\n    userName: {\n        color: COLORS_THEME.text_secondary,\n        fontSize: 22,\n        marginLeft: 16,\n    },\n    repoName: {\n        color: COLORS_THEME.text_primary,\n        fontSize: 30\n    }\n});\n\n\nexport default RepositoryView;"]},"metadata":{},"sourceType":"module"}